const typeDefs = `
type Urls { type: String url: String }

type Events { available: Int
  collectionURI: String
  returned: Int
  items: [Items ] }

type Items { resourceURI: String name: String type: String }

type Stories { available: Int
  collectionURI: String
  returned: Int
  items: [Items ] }

type Series { available: Int
  collectionURI: String
  returned: Int
  items: [Items ] }

type Comics { available: Int
  collectionURI: String
  returned: Int
  items: [Items ] }

type Thumbnail { path: String extension: String }

type Results { id: Int
  cursor: String!
  hasMore: Boolean!
  name: String
  description: String
  modified: String
  resourceURI: String
  urls: [Urls ]
  events: Events
  stories: Stories
  series: Series
  comics: Comics
  thumbnail: Thumbnail }

type Data { offset: Int
  limit: Int
  total: Int
  count: Int
  results: [ Results ] }

type AutogeneratedMainType { code: Int
  status: String
  copyright: String
  attributionText: String
  attributionHTML: String
  etag: String
  data: Data }

# Types with identical fields:
# Events Stories Series Comics

# Queries:
  type Query {
    allHeroes(
        pageSize: Int
        after: String
    ): [Results]
    getHero(id: ID!): Results
  }
`

module.exports = typeDefs